h1. Ovce

h2. Instalacia

1. stiahni a nainstaluj FlashDevelop (FD) z http://www.flashdevelop.org/
2. spusti projekt priamo cez subor flash/Ovce.as3proj
3. spusti pomocou F5 alebo Project->Test Project

h2. Engine

Engine je inspirovany architekturou zalozenou na komponentoch podobne ako v Unity3D.
Vrstvy, entity a ich komponenty sa definuju cez konfigurak. Maximalny pocet komponent jedneho typu je zatial 1. Opis a stav implementacie komponentov:
- BaseComponent - abstraktna trieda obsahujuca start()/update() funkciu, ktore su volane enginom a referenciu na entitu v pripade pristupu k ostatnym komponentom tej istej entity
- AudioComponent - [TODO] bude zabezpecovat manazment zvukov pre entitu
- BehaviorComponent - abstraktna trieda pre skriptovanie, ktora bude obsahovat interface pre controllery
- InputComponent - abstraktna trieda pre controllery (napr. TouchController)
- NavigationComponent - navigacia/pathfinding
- PhysicsComponent - kolizie/pohyb (NAPE physics)
- RenderComponent - zabezpecuje renderovanie imagov (textura) a clipov (atlas + textura)
- ZoneComponent - kontajner pre zony pouzivani pri vypocte triggerov

Engine obsahuje sucasti, ktore su pristupne z kazdej komponenty:

- Renderer - zabezpecuje renderovanie entit do vrstiev, manazment kamery a validaciu objektov v hlbke
- SignalBus - obsahuje tabulku signalov (eventov), do ktorej sa mozu pridat trigger/collision/custom signaly, ktore sa mozu pocuvat a dispatchovat

Engine zabezpecuje nasledovnu funkcionalitu:
- Volanie metody start pre komponentu (po loade komponenty) 
- Volanie metody update pre komponentu v kazdej iteracii Loopu
- Hlavny Loop vykonava:
1. inicializaciu komponentov, ktore este neboli loadnute
2. update pre Nape physics
3. testovanie kolizii triggerov na zaklade zon
4. validacia pozicii (fyzika -> render)
5. vykonanie spravani
6. render
7. audio [TODO]


